@property --input-control-border {
  syntax: '<color>';
  inherits: true;
  initial-value: #e3e3e3;
}
@property --input-control-primary {
  syntax: '<color>';
  inherits: true;
  initial-value: #ff8d02;
}
@property --input-control-error {
  syntax: '<color>';
  inherits: true;
  initial-value: #e74c3c;
}

.InputControl {
  --transition-time: 250ms;
  --size-step: 2px;
  position: relative;
  box-sizing: border-box;
  padding: 2px;
  border: 2px solid var(--input-control-border);
  transition: border-color var(--transition-time) ease-in-out;
  cursor: pointer;
}

.InputControl[data-control-size='xs'] {
  width: calc(16px - var(--size-step) * 2);
  height: calc(16px - var(--size-step) * 2);
}

.InputControl[data-control-size='sm'] {
  width: calc(16px - var(--size-step));
  height: calc(16px - var(--size-step));
}

.InputControl[data-control-size='md'] {
  width: 16px;
  height: 16px;
}

.InputControl[data-control-size='lg'] {
  width: calc(16px + var(--size-step));
  height: calc(16px + var(--size-step));
}

.InputControl[data-control-size='xl'] {
  width: calc(16px + var(--size-step) * 2);
  height: calc(16px + var(--size-step) * 2);
}

.InputControl[data-control-size='2xl'] {
  width: calc(16px + var(--size-step) * 3);
  height: calc(16px + var(--size-step) * 3);
}

.InputControl[data-control-size='3xl'] {
  width: calc(16px + var(--size-step) * 4);
  height: calc(16px + var(--size-step) * 4);
}

.InputControl[data-control-shape='checkbox'],
.InputControl[data-control-shape='checkbox']:after {
  border-radius: 0;
}

.InputControl[data-control-shape='radio'],
.InputControl[data-control-shape='radio']:after {
  border-radius: 50%;
}

.InputControl:after {
  position: absolute;
  z-index: 1;
  top: 50%;
  left: 50%;
  width: calc(100% - 4px);
  height: calc(100% - 4px);
  transform: translate(-50%, -50%);
  display: block;
  content: '';
  background-color: transparent;
  transition: background-color var(--transition-time) ease-in-out;
}

.InputControl.InputControlChecked:after {
  background-color: var(--input-control-primary) !important;
}

.InputControl.InputControlHovered:after {
  background-color: var(--input-control-border);
}

.InputControl.InputControlChecked.InputControlError:after {
  background-color: var(--input-control-error);
}

.InputControl.InputControlFocused {
  border-color: var(--input-control-primary);
}

.InputControl.InputControlDisabled {
  cursor: not-allowed;
  opacity: 04;
}

.InputControl.InputControlError {
  border-color: var(--input-control-error);
}
